[tool.poetry]
name = "{{cookiecutter.project_slug}}"
version = "0.1.0"
description = "{{cookiecutter.project_short_description}}"
authors = ["{{cookiecutter.your_name}} <{{cookiecutter.email}}>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "{{cookiecutter.python_version}}"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
_format = "ruff format ."
_auto_fix = "ruff . --fix-only --show-fixes --exit-zero"
_auto_fix_unsafe = "ruff . --fix-only --show-fixes --exit-zero --unsafe-fixes"
format = ["_auto_fix", "_format"]
format_unsafe = ["_auto_fix_unsafe", "_format"]
lint = { cmd = "ruff gaitlink --fix", help = "Lint all files with ruff." }
_lint_ci = "ruff gaitlink --output-format=github"
_check_format = "ruff format . --check"
ci_check = { sequence = ["_check_format", "_lint_ci"], help = "Check all potential format and linting issues." }
test = { cmd = "pytest --cov={{cookiecutter.project_slug}} --cov-report=term-missing --cov-report=xml", help = "Run Pytest with coverage." }
docs = { "script" = "_tasks:task_docs()",  help = "Build the html docs using Sphinx." }
version = { script = "_tasks:task_update_version()" }
